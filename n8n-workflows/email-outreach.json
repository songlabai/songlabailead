{
  "name": "Email Outreach Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24
            }
          ]
        }
      },
      "id": "1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
      "name": "Daily Email Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300],
      "cronExpression": "0 11 * * *"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Get prospects ready for initial outreach\nSELECT \n  p.id,\n  p.name,\n  p.business_name,\n  p.email,\n  p.prospect_type,\n  p.lead_score,\n  p.personalized_angle,\n  p.jingle_needs,\n  p.city,\n  p.is_premium_area,\n  p.budget_estimate,\n  p.phone,\n  p.website\nFROM prospects p\nWHERE \n  p.is_active = TRUE \n  AND p.deleted_at IS NULL\n  AND p.contacted = FALSE\n  AND p.email IS NOT NULL\n  AND p.email ~ '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'\n  AND p.lead_score >= COALESCE((SELECT value::integer FROM system_config WHERE key = 'lead_score_threshold'), 45)\n  AND p.pipeline_stage = 'new'\nORDER BY p.lead_score DESC, p.created_at ASC\nLIMIT COALESCE((SELECT value::integer FROM system_config WHERE key = 'daily_email_limit'), 25);",
        "options": {}
      },
      "id": "2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e",
      "name": "Get Prospects for Outreach",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [460, 300],
      "credentials": {
        "postgres": {
          "id": "postgres_main",
          "name": "PostgreSQL - SongLabAI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $json.length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f",
      "name": "Check If Prospects Available",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// SongLabAI - Email Content Generation\n// Generate personalized email content for each prospect\n\nconst prospects = $input.all();\nconst personalizedEmails = [];\n\n// Business configuration\nconst businessConfig = {\n  sender_name: process.env.SENDER_NAME || 'Alex Johnson',\n  sender_email: process.env.SMTP_FROM_EMAIL || 'hello@songlabai.com',\n  business_name: process.env.BUSINESS_NAME || 'SongLabAI',\n  business_website: process.env.BUSINESS_WEBSITE || 'https://songlabai.com',\n  business_phone: process.env.BUSINESS_PHONE || '+1-555-JINGLE-1',\n  calendly_automotive: process.env.CALENDLY_AUTOMOTIVE_URL || 'https://calendly.com/songlabai/auto-consultation',\n  calendly_restaurant: process.env.CALENDLY_RESTAURANT_URL || 'https://calendly.com/songlabai/restaurant-consultation',\n  calendly_legal: process.env.CALENDLY_LEGAL_URL || 'https://calendly.com/songlabai/legal-consultation',\n  calendly_medical: process.env.CALENDLY_MEDICAL_URL || 'https://calendly.com/songlabai/medical-consultation',\n  calendly_general: process.env.CALENDLY_GENERAL_URL || 'https://calendly.com/songlabai/business-consultation'\n};\n\n// Email templates\nconst emailTemplates = {\n  automotive: {\n    subject: \"üöó Stand Out in {{city}}'s Competitive Auto Market - {{business_name}}\",\n    previewText: \"Free custom jingle sample - no commitment required\",\n    template: 'automotive'\n  },\n  restaurant: {\n    subject: \"üçΩÔ∏è Make {{business_name}} the Restaurant {{city}} Can't Stop Humming About\",\n    previewText: \"Free 30-second jingle sample for your restaurant\",\n    template: 'restaurant'\n  },\n  legal: {\n    subject: \"‚öñÔ∏è Professional Audio Branding for {{business_name}} - Free Consultation\",\n    previewText: \"Complimentary professional jingle sample\",\n    template: 'legal'\n  },\n  medical: {\n    subject: \"üè• Therapeutic Audio Branding for {{business_name}} - Complimentary Sample\",\n    previewText: \"Creating comfort through sound\",\n    template: 'medical'\n  },\n  real_estate: {\n    subject: \"üè† {{business_name}}: Be the Agent {{city}} Remembers - Free Jingle Sample\",\n    previewText: \"Custom jingle for California real estate success\",\n    template: 'automotive' // Use automotive template as base\n  },\n  general_business: {\n    subject: \"üéµ Custom Jingle for {{business_name}} - Free Sample Inside\",\n    previewText: \"Stand out in {{city}}'s competitive market\",\n    template: 'restaurant' // Use restaurant template as base\n  }\n};\n\nfor (const prospect of prospects) {\n  try {\n    const prospectData = prospect.json;\n    \n    // Get template configuration\n    const templateConfig = emailTemplates[prospectData.prospect_type] || emailTemplates.general_business;\n    \n    // Generate personalized variables\n    const personalizedVars = {\n      // Prospect information\n      name: prospectData.name || 'there',\n      business_name: prospectData.business_name,\n      business_name_encoded: encodeURIComponent(prospectData.business_name),\n      email: prospectData.email,\n      city: prospectData.city,\n      prospect_type: prospectData.prospect_type,\n      lead_score: prospectData.lead_score,\n      is_premium_area: prospectData.is_premium_area,\n      budget_estimate: prospectData.budget_estimate,\n      personalized_angle: prospectData.personalized_angle,\n      jingle_needs: Array.isArray(prospectData.jingle_needs) ? prospectData.jingle_needs.join(', ') : '',\n      \n      // Business configuration\n      sender_name: businessConfig.sender_name,\n      sender_email: businessConfig.sender_email,\n      business_website: businessConfig.business_website,\n      business_phone: businessConfig.business_phone,\n      \n      // Calendly URL based on prospect type\n      calendly_url: getCalendlyUrl(prospectData.prospect_type, businessConfig),\n      \n      // Email metadata\n      unsubscribe_url: `${businessConfig.business_website}/unsubscribe?email=${encodeURIComponent(prospectData.email)}&id=${prospectData.id}`,\n      tracking_pixel: `${businessConfig.business_website}/track/open?email=${encodeURIComponent(prospectData.email)}&id=${prospectData.id}`,\n      \n      // Timing\n      current_date: new Date().toLocaleDateString(),\n      current_time: new Date().toLocaleTimeString()\n    };\n    \n    // Generate personalized subject line\n    const subjectLine = replaceVariables(templateConfig.subject, personalizedVars);\n    \n    // Generate email body (for now, just the variables - the actual HTML template will be loaded separately)\n    const emailBody = generateEmailBody(prospectData.prospect_type, personalizedVars);\n    \n    personalizedEmails.push({\n      // Prospect information\n      prospect_id: prospectData.id,\n      prospect_name: prospectData.name,\n      prospect_email: prospectData.email,\n      prospect_type: prospectData.prospect_type,\n      lead_score: prospectData.lead_score,\n      \n      // Email content\n      subject_line: subjectLine,\n      email_body: emailBody,\n      template_used: templateConfig.template,\n      email_type: 'initial_outreach',\n      preview_text: replaceVariables(templateConfig.previewText, personalizedVars),\n      \n      // Personalization data\n      personalization_tokens: personalizedVars,\n      \n      // SMTP configuration\n      from_email: businessConfig.sender_email,\n      from_name: `${businessConfig.sender_name} - ${businessConfig.business_name}`,\n      to_email: prospectData.email,\n      to_name: prospectData.name || prospectData.business_name,\n      \n      // Tracking\n      tracking_pixel: personalizedVars.tracking_pixel,\n      unsubscribe_url: personalizedVars.unsubscribe_url,\n      calendly_url: personalizedVars.calendly_url\n    });\n    \n  } catch (error) {\n    console.error(`Error processing prospect ${prospect.json.id}:`, error);\n  }\n}\n\n// Helper functions\nfunction getCalendlyUrl(prospectType, config) {\n  switch (prospectType) {\n    case 'automotive': return config.calendly_automotive;\n    case 'restaurant': return config.calendly_restaurant;\n    case 'legal': return config.calendly_legal;\n    case 'medical': return config.calendly_medical;\n    case 'real_estate': return config.calendly_general;\n    default: return config.calendly_general;\n  }\n}\n\nfunction replaceVariables(template, variables) {\n  let result = template;\n  for (const [key, value] of Object.entries(variables)) {\n    const regex = new RegExp(`\\\\{\\\\{${key}\\\\}\\\\}`, 'g');\n    result = result.replace(regex, value || '');\n  }\n  return result;\n}\n\nfunction generateEmailBody(prospectType, vars) {\n  // Basic email body for now - in production, this would load and process the HTML templates\n  const templates = {\n    automotive: `\n      <p>Hi there,</p>\n      <p>${vars.personalized_angle}</p>\n      <p>I specialize in creating custom jingles for California auto dealers. A memorable 15-second jingle can increase brand recall by 300% - perfect for TV and radio advertising campaigns.</p>\n      <p><strong>Here's what a custom jingle can do for ${vars.business_name}:</strong></p>\n      <ul>\n        <li>üéØ Make your dealership the first one customers think of</li>\n        <li>üì∫ Perfect for TV and radio advertising campaigns</li>\n        <li>üè¢ Create a premium atmosphere in your showroom</li>\n        <li>üìû Professional phone hold music that reinforces your brand</li>\n      </ul>\n      <p>I'd love to create a <strong>FREE 15-second jingle sample</strong> specifically for ${vars.business_name} - no commitment required.</p>\n      <p><a href=\"${vars.calendly_url}\">üìÖ Book Your Free Consultation</a></p>\n      <p>Best regards,<br>${vars.sender_name}<br>SongLabAI - Custom Jingles</p>\n    `,\n    restaurant: `\n      <p>Hi there,</p>\n      <p>${vars.personalized_angle}</p>\n      <p>I help California restaurants create custom jingles that turn first-time visitors into regulars. When customers can't get your jingle out of their heads, they can't stop thinking about your food.</p>\n      <p><strong>Here's how a custom jingle transforms ${vars.business_name}:</strong></p>\n      <ul>\n        <li>üß† Customers remember you long after they leave</li>\n        <li>üìª Stand out from generic restaurant ads</li>\n        <li>üì± Shareable content that goes viral</li>\n        <li>üìû Keep callers engaged while they wait</li>\n      </ul>\n      <p>I'll create a <strong>FREE 30-second jingle sample</strong> specifically for ${vars.business_name}.</p>\n      <p><a href=\"${vars.calendly_url}\">üìÖ Book Your Free Tasting Session</a></p>\n      <p>Best regards,<br>${vars.sender_name}<br>SongLabAI - Restaurant Jingle Specialist</p>\n    `,\n    legal: `\n      <p>Dear Legal Professional,</p>\n      <p>${vars.personalized_angle}</p>\n      <p>I specialize in creating professional jingles for California law firms. In your field, trust and instant recognition are everything. A well-crafted audio signature ensures potential clients remember your firm when they need legal representation most.</p>\n      <p><strong>Professional Benefits for ${vars.business_name}:</strong></p>\n      <ul>\n        <li>üß† Be the first law firm clients think of in crisis</li>\n        <li>üì∫ Stand out during prime legal advertising slots</li>\n        <li>üìû Sophisticated hold music that builds confidence</li>\n        <li>üè¢ Professional ambiance that reassures clients</li>\n      </ul>\n      <p>I'd like to create a <strong>complimentary 20-second professional jingle sample</strong> for ${vars.business_name}.</p>\n      <p><a href=\"${vars.calendly_url}\">üìÖ Schedule Professional Consultation</a></p>\n      <p>Respectfully,<br>${vars.sender_name}<br>Professional Audio Branding Specialist</p>\n    `,\n    medical: `\n      <p>Dear Healthcare Professional,</p>\n      <p>${vars.personalized_angle}</p>\n      <p>I create therapeutic audio branding for California healthcare practices. The right jingle doesn't just promote your practice‚Äîit creates a sense of comfort and trust that helps patients feel more at ease.</p>\n      <p><strong>Healing Benefits for ${vars.business_name}:</strong></p>\n      <ul>\n        <li>ü§ó Soothing audio that reduces patient anxiety</li>\n        <li>üß† Be the practice patients remember and recommend</li>\n        <li>üìû Reduce patient stress during phone waits</li>\n        <li>üè• Create a peaceful, healing environment</li>\n      </ul>\n      <p>I'd like to create a <strong>FREE therapeutic jingle sample</strong> for ${vars.business_name}.</p>\n      <p><a href=\"${vars.calendly_url}\">üìÖ Schedule Wellness Consultation</a></p>\n      <p>In health and harmony,<br>${vars.sender_name}<br>Therapeutic Audio Specialist</p>\n    `\n  };\n  \n  return templates[prospectType] || templates.restaurant;\n}\n\nconsole.log(`Generated ${personalizedEmails.length} personalized emails`);\n\nreturn personalizedEmails.map(email => ({ json: email }));"
      },
      "id": "4d5e6f7a-8b9c-0d1e-2f3a-4b5c6d7e8f9a",
      "name": "Generate Personalized Emails",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "fromEmail": "={{ $json.from_email }}",
        "fromName": "={{ $json.from_name }}",
        "toEmail": "={{ $json.to_email }}",
        "subject": "={{ $json.subject_line }}",
        "html": "={{ $json.email_body }}",
        "options": {
          "replyTo": "={{ $json.from_email }}",
          "allowUnauthorizedCerts": false,
          "customHeaders": [
            {
              "name": "X-Campaign-Type",
              "value": "initial_outreach"
            },
            {
              "name": "X-Prospect-Type",
              "value": "={{ $json.prospect_type }}"
            },
            {
              "name": "X-Lead-Score",
              "value": "={{ $json.lead_score }}"
            }\n          ],\n          \"cc\": \"\",\n          \"bcc\": \"\"\n        }\n      },\n      \"id\": \"5e6f7a8b-9c0d-1e2f-3a4b-5c6d7e8f9a0b\",\n      \"name\": \"Send Email via SMTP\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"typeVersion\": 2,\n      \"position\": [1120, 300],\n      \"credentials\": {\n        \"smtp\": {\n          \"id\": \"smtp_main\",\n          \"name\": \"SMTP - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"email_campaigns\",\n        \"columns\": \"prospect_id,email_type,subject_line,email_body,template_used,personalization_tokens,from_email,from_name,to_email,delivery_status\",\n        \"additionalFields\": {\n          \"mode\": \"insert\"\n        }\n      },\n      \"id\": \"6f7a8b9c-0d1e-2f3a-4b5c-6d7e8f9a0b1c\",\n      \"name\": \"Log Email Campaign\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1340, 300],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"update\",\n        \"table\": \"prospects\",\n        \"updateKey\": \"id\",\n        \"columns\": \"contacted,last_contact_date,contact_attempts,contact_method,pipeline_stage\",\n        \"additionalFields\": {}\n      },\n      \"id\": \"7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d\",\n      \"name\": \"Update Prospect Status\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1340, 480],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// SongLabAI - Email Campaign Summary\\n// Generate summary statistics for the email outreach campaign\\n\\nconst items = $input.all();\\nconst timestamp = new Date();\\n\\n// Count results by prospect type\\nconst summary = {\\n  total_emails_sent: items.length,\\n  automotive_emails: items.filter(item => item.json.prospect_type === 'automotive').length,\\n  restaurant_emails: items.filter(item => item.json.prospect_type === 'restaurant').length,\\n  legal_emails: items.filter(item => item.json.prospect_type === 'legal').length,\\n  medical_emails: items.filter(item => item.json.prospect_type === 'medical').length,\\n  real_estate_emails: items.filter(item => item.json.prospect_type === 'real_estate').length,\\n  premium_area_emails: items.filter(item => item.json.personalization_tokens?.is_premium_area).length,\\n  high_score_emails: items.filter(item => item.json.lead_score >= 70).length,\\n  average_lead_score: items.length > 0 ? Math.round(items.reduce((sum, item) => sum + item.json.lead_score, 0) / items.length) : 0,\\n  execution_timestamp: timestamp.toISOString(),\\n  workflow_name: 'Email Outreach Campaign',\\n  email_types: items.map(item => item.json.email_type).filter((value, index, self) => self.indexOf(value) === index),\\n  templates_used: items.map(item => item.json.template_used).filter((value, index, self) => self.indexOf(value) === index)\\n};\\n\\n// Log to console for monitoring\\nconsole.log('=== Email Outreach Campaign Summary ===');\\nconsole.log(`üìß Total Emails Sent: ${summary.total_emails_sent}`);\\nconsole.log(`üöó Automotive: ${summary.automotive_emails}`);\\nconsole.log(`üçΩÔ∏è Restaurant: ${summary.restaurant_emails}`);\\nconsole.log(`‚öñÔ∏è Legal: ${summary.legal_emails}`);\\nconsole.log(`üè• Medical: ${summary.medical_emails}`);\\nconsole.log(`üè† Real Estate: ${summary.real_estate_emails}`);\\nconsole.log(`üíé Premium Area: ${summary.premium_area_emails}`);\\nconsole.log(`üéØ High Score (70+): ${summary.high_score_emails}`);\\nconsole.log(`üìä Average Lead Score: ${summary.average_lead_score}`);\\nconsole.log('=========================================');\\n\\nreturn [{ json: summary }];\"\n      },\n      \"id\": \"8b9c0d1e-2f3a-4b5c-6d7e-8f9a0b1c2d3e\",\n      \"name\": \"Generate Email Summary\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [1560, 300]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"workflow_logs\",\n        \"columns\": \"workflow_name,status,start_time,end_time,records_processed,records_success,context_data\"\n      },\n      \"id\": \"9c0d1e2f-3a4b-5c6d-7e8f-9a0b1c2d3e4f\",\n      \"name\": \"Log Workflow Execution\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1780, 300],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"method\": \"POST\",\n        \"url\": \"={{ $env.SLACK_WEBHOOK_URL }}\",\n        \"options\": {\n          \"body\": {\n            \"type\": \"json\",\n            \"json\": \"{\\n  \\\"text\\\": \\\"üìß SongLabAI Email Campaign Complete\\\",\\n  \\\"blocks\\\": [\\n    {\\n      \\\"type\\\": \\\"section\\\",\\n      \\\"text\\\": {\\n        \\\"type\\\": \\\"mrkdwn\\\",\\n        \\\"text\\\": \\\"*Email Outreach Campaign Complete* üìß\\\\n\\\\nSent {{ $json.total_emails_sent }} personalized emails:\\\\n‚Ä¢ üöó Automotive: {{ $json.automotive_emails }}\\\\n‚Ä¢ üçΩÔ∏è Restaurant: {{ $json.restaurant_emails }}\\\\n‚Ä¢ ‚öñÔ∏è Legal: {{ $json.legal_emails }}\\\\n‚Ä¢ üè• Medical: {{ $json.medical_emails }}\\\\n‚Ä¢ üè† Real Estate: {{ $json.real_estate_emails }}\\\\n\\\\nüíé Premium Area Prospects: {{ $json.premium_area_emails }}\\\\nüìä Average Lead Score: {{ $json.average_lead_score }}\\\\nüéØ High Priority (70+ score): {{ $json.high_score_emails }}\\\"\n      }\n    }\n  ]\n}\"\n          }\n        }\n      },\n      \"id\": \"0d1e2f3a-4b5c-6d7e-8f9a-0b1c2d3e4f5a\",\n      \"name\": \"Send Slack Notification\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [1560, 120]\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"id\": \"condition1\",\n              \"leftValue\": \"={{ $json.total_emails_sent }}\",\n              \"rightValue\": 0,\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"1e2f3a4b-5c6d-7e8f-9a0b-1c2d3e4f5a6b\",\n      \"name\": \"Check If Emails Sent\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2,\n      \"position\": [1560, 120]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// SongLabAI - Error Handler\\n// Log errors and send notifications for failed workflow execution\\n\\nconst error = $input.first();\\nconst timestamp = new Date();\\n\\n// Create error summary\\nconst errorSummary = {\\n  workflow_name: 'Email Outreach Campaign',\\n  status: 'error',\\n  start_time: timestamp.toISOString(),\\n  end_time: timestamp.toISOString(),\\n  records_processed: 0,\\n  records_success: 0,\\n  error_message: error.error?.message || 'Unknown error occurred',\\n  error_stack: error.error?.stack || 'No stack trace available',\\n  context_data: {\\n    node_name: error.node?.name || 'Unknown node',\\n    error_type: error.error?.name || 'Unknown error type',\\n    execution_id: $executionId,\\n    timestamp: timestamp.toISOString()\\n  }\\n};\\n\\nconsole.error('‚ùå Email Outreach Campaign Failed:', errorSummary);\\n\\nreturn [{ json: errorSummary }];\"\n      },\n      \"id\": \"2f3a4b5c-6d7e-8f9a-0b1c-2d3e4f5a6b7c\",\n      \"name\": \"Error Handler\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [900, 520]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"workflow_logs\",\n        \"columns\": \"workflow_name,status,start_time,end_time,records_processed,records_success,error_message,error_stack,context_data\"\n      },\n      \"id\": \"3a4b5c6d-7e8f-9a0b-1c2d-3e4f5a6b7c8d\",\n      \"name\": \"Log Error\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1120, 520],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Daily Email Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Get Prospects for Outreach\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Get Prospects for Outreach\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check If Prospects Available\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check If Prospects Available\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Personalized Emails\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Personalized Emails\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Email via SMTP\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Send Email via SMTP\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Log Email Campaign\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Update Prospect Status\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Log Email Campaign\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate Email Summary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate Email Summary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check If Emails Sent\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Log Workflow Execution\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check If Emails Sent\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send Slack Notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Error Handler\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Log Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"active\": true,\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": {\n      \"onError\": \"continueRegularExecution\"\n    }\n  },\n  \"versionId\": \"1\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"id\": \"email-outreach-workflow\",\n  \"tags\": [\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"email-outreach\",\n      \"name\": \"email-outreach\"\n    },\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"lead-generation\",\n      \"name\": \"lead-generation\"\n    },\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"smtp\",\n      \"name\": \"smtp\"\n    }\n  ]\n}