{
  "name": "LinkedIn Alternative Prospecting",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 48
            }
          ]
        }
      },
      "id": "1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
      "name": "Bi-Daily LinkedIn Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300],
      "cronExpression": "0 14 */2 * *"
    },
    {
      "parameters": {
        "jsCode": "// SongLabAI - LinkedIn Alternative Search Configuration\n// Configure search parameters for California business decision makers\n\nconst searchTargets = [\n  // Automotive Decision Makers\n  {\n    keywords: 'car dealer owner manager California',\n    industry: 'automotive',\n    titles: ['Owner', 'General Manager', 'Sales Manager', 'Marketing Director'],\n    priority: 35,\n    type: 'automotive'\n  },\n  \n  // Restaurant Decision Makers\n  {\n    keywords: 'restaurant owner manager California',\n    industry: 'restaurants',\n    titles: ['Owner', 'Manager', 'Marketing Manager', 'Brand Manager'],\n    priority: 30,\n    type: 'restaurant'\n  },\n  \n  // Legal Decision Makers\n  {\n    keywords: 'law firm partner attorney California',\n    industry: 'legal services',\n    titles: ['Partner', 'Managing Partner', 'Marketing Director', 'Business Development'],\n    priority: 28,\n    type: 'legal'\n  },\n  \n  // Medical Decision Makers\n  {\n    keywords: 'medical practice doctor dentist California',\n    industry: 'medical practice',\n    titles: ['Doctor', 'Practice Manager', 'Medical Director', 'Administrator'],\n    priority: 25,\n    type: 'medical'\n  },\n  \n  // Real Estate Decision Makers\n  {\n    keywords: 'real estate broker agent California',\n    industry: 'real estate',\n    titles: ['Broker', 'Owner', 'Team Leader', 'Marketing Director'],\n    priority: 25,\n    type: 'real_estate'\n  }\n];\n\nconst californiaLocations = [\n  'Los Angeles, CA', 'San Francisco, CA', 'San Diego, CA', 'Sacramento, CA',\n  'Fresno, CA', 'Long Beach, CA', 'Oakland, CA', 'Bakersfield, CA',\n  'Anaheim, CA', 'Santa Ana, CA', 'Riverside, CA', 'Stockton, CA'\n];\n\n// Create search combinations\nconst searches = [];\nconst dailyLimit = parseInt(process.env.DAILY_LINKEDIN_REQUESTS_LIMIT) || 100;\nlet searchCount = 0;\n\nfor (const target of searchTargets) {\n  for (let i = 0; i < Math.min(californiaLocations.length, 3); i++) {\n    if (searchCount >= dailyLimit) break;\n    \n    const location = californiaLocations[i];\n    \n    searches.push({\n      searchIndex: searchCount,\n      keywords: target.keywords,\n      location: location,\n      industry: target.industry,\n      titles: target.titles,\n      priority: target.priority,\n      prospect_type: target.type,\n      search_type: 'company_search',\n      timestamp: new Date().toISOString()\n    });\n    \n    searchCount++;\n  }\n  if (searchCount >= dailyLimit) break;\n}\n\n// Sort by priority\nsearches.sort((a, b) => b.priority - a.priority);\n\nconsole.log(`Generated ${searches.length} LinkedIn alternative searches`);\n\nreturn searches.slice(0, Math.min(dailyLimit / 5, 20)).map(search => ({ json: search }));"
      },
      "id": "2b3c4d5e-6f7a-8b9c-0d1e-2f3a4b5c6d7e",
      "name": "Setup LinkedIn Search",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "condition1",
              "leftValue": "={{ $env.PROXYCURL_API_KEY }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "isNotEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f",
      "name": "Check Proxycurl Available",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "https://nubela.co/proxycurl/api/linkedin/company/employees/",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "options": {
          "queryParameters": {\n            \"linkedin_company_profile_url\": \"https://www.linkedin.com/company/{{ $json.keywords.replace(/\\\\s+/g, '-').toLowerCase() }}\",\n            \"country\": \"US\",\n            \"enrich_profiles\": \"enrich\",\n            \"role_search\": \"{{ $json.titles.join(',') }}\",\n            \"page_size\": \"10\"\n          },\n          \"timeout\": 30000,\n          \"headers\": {\n            \"Authorization\": \"Bearer {{ $env.PROXYCURL_API_KEY }}\"\n          }\n        }\n      },\n      \"id\": \"4d5e6f7a-8b9c-0d1e-2f3a-4b5c6d7e8f9a\",\n      \"name\": \"Proxycurl Company Search\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [900, 200]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"https://linkedin-api-alternative.p.rapidapi.com/v1/company/employees\",\n        \"options\": {\n          \"queryParameters\": {\n            \"company_name\": \"={{ $json.keywords }}\",\n            \"location\": \"={{ $json.location }}\",\n            \"job_title\": \"={{ $json.titles.join('|') }}\",\n            \"limit\": \"10\"\n          },\n          \"timeout\": 30000,\n          \"headers\": {\n            \"X-RapidAPI-Key\": \"={{ $env.RAPIDAPI_KEY }}\",\n            \"X-RapidAPI-Host\": \"linkedin-api-alternative.p.rapidapi.com\"\n          }\n        }\n      },\n      \"id\": \"5e6f7a8b-9c0d-1e2f-3a4b-5c6d7e8f9a0b\",\n      \"name\": \"RapidAPI LinkedIn Alternative\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [900, 400]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// SongLabAI - LinkedIn Alternative Results Processing\\n// Process and qualify LinkedIn alternative API results\\n\\nconst items = $input.all();\\nconst qualifiedProspects = [];\\n\\n// Email patterns to extract from profile descriptions or company data\\nconst emailRegex = /\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Z|a-z]{2,}\\\\b/g;\\n\\nfor (const item of items) {\\n  try {\\n    const searchParams = item.json;\\n    let results = [];\\n    \\n    // Handle different API response formats\\n    if (item.json.employees) {\\n      results = item.json.employees; // Proxycurl format\\n    } else if (item.json.data) {\\n      results = item.json.data; // RapidAPI format\\n    } else if (Array.isArray(item.json)) {\\n      results = item.json; // Direct array format\\n    }\\n    \\n    console.log(`Processing ${results.length} LinkedIn results for: ${searchParams.keywords}`);\\n    \\n    for (const profile of results) {\\n      try {\\n        // Calculate prospect score\\n        let score = 0;\\n        \\n        // Base score by prospect type\\n        const baseScores = {\\n          'automotive': 35,\\n          'restaurant': 30,\\n          'legal': 28,\\n          'medical': 25,\\n          'real_estate': 25\\n        };\\n        \\n        score += baseScores[searchParams.prospect_type] || 20;\\n        \\n        // Position/title bonus\\n        const title = (profile.headline || profile.job_title || '').toLowerCase();\\n        const seniorTitles = ['owner', 'partner', 'ceo', 'president', 'director', 'manager'];\\n        if (seniorTitles.some(seniorTitle => title.includes(seniorTitle))) {\\n          score += 25;\\n        }\\n        \\n        // Experience bonus\\n        if (profile.experience_years && profile.experience_years > 5) {\\n          score += 15;\\n        } else if (profile.experience_years && profile.experience_years > 2) {\\n          score += 10;\\n        }\\n        \\n        // Location bonus (California)\\n        const location = (profile.location || searchParams.location || '').toLowerCase();\\n        if (location.includes('california') || location.includes('ca')) {\\n          score += 10;\\n        }\\n        \\n        // Premium area bonus\\n        const premiumAreas = ['los angeles', 'san francisco', 'san diego', 'palo alto', 'silicon valley'];\\n        const inPremiumArea = premiumAreas.some(area => location.includes(area));\\n        if (inPremiumArea) {\\n          score += 15;\\n        }\\n        \\n        // Company size bonus\\n        if (profile.company_size) {\\n          const companySize = profile.company_size.toLowerCase();\\n          if (companySize.includes('51-200') || companySize.includes('11-50')) {\\n            score += 10; // Sweet spot for our services\\n          }\\n        }\\n        \\n        // LinkedIn activity bonus\\n        if (profile.connections && profile.connections > 500) {\\n          score += 10;\\n        }\\n        \\n        // Only include prospects with minimum score\\n        if (score >= 40) {\\n          // Extract or generate email\\n          let email = null;\\n          \\n          // Try to extract email from profile\\n          const profileText = [\\n            profile.summary || '',\\n            profile.headline || '',\\n            profile.company_description || ''\\n          ].join(' ');\\n          \\n          const emailMatches = profileText.match(emailRegex);\\n          if (emailMatches && emailMatches.length > 0) {\\n            email = emailMatches[0];\\n          } else {\\n            // Generate likely email patterns\\n            const firstName = (profile.first_name || '').toLowerCase();\\n            const lastName = (profile.last_name || '').toLowerCase();\\n            const companyName = (profile.current_company || '').toLowerCase().replace(/[^a-z0-9]/g, '');\\n            \\n            if (firstName && lastName && companyName) {\\n              // Common email patterns\\n              const patterns = [\\n                `${firstName}.${lastName}@${companyName}.com`,\\n                `${firstName}@${companyName}.com`,\\n                `${firstName}${lastName}@${companyName}.com`\\n              ];\\n              email = patterns[0]; // Use first pattern as best guess\\n            }\\n          }\\n          \\n          // Generate personalized angle\\n          const personalizedAngle = generateLinkedInPersonalizedAngle(profile, searchParams);\\n          \\n          qualifiedProspects.push({\\n            // Basic Information\\n            name: `${profile.first_name || ''} ${profile.last_name || ''}`.trim() || profile.name,\\n            business_name: profile.current_company || profile.company_name,\\n            email: email,\\n            \\n            // Classification\\n            prospect_type: searchParams.prospect_type,\\n            industry_category: profile.industry || searchParams.industry,\\n            lead_source: 'linkedin_alternative',\\n            \\n            // Scoring\\n            lead_score: Math.min(score, 100),\\n            budget_estimate: estimateLinkedInBudget(profile, searchParams.prospect_type),\\n            priority_level: score >= 70 ? 'high' : (score >= 55 ? 'medium' : 'normal'),\\n            \\n            // Personalization\\n            jingle_needs: assessLinkedInJingleNeeds(searchParams.prospect_type),\\n            personalized_angle: personalizedAngle,\\n            pain_points: identifyLinkedInPainPoints(searchParams.prospect_type),\\n            \\n            // Geographic\\n            city: extractCity(profile.location || searchParams.location),\\n            state: 'CA',\\n            in_california: true,\\n            is_premium_area: inPremiumArea,\\n            \\n            // LinkedIn Specific Data\\n            linkedin_data: {\\n              linkedin_url: profile.linkedin_url || profile.profile_url,\\n              headline: profile.headline,\\n              current_position: profile.job_title || profile.current_position,\\n              current_company: profile.current_company,\\n              industry: profile.industry,\\n              location: profile.location,\\n              connections_count: profile.connections,\\n              experience_years: profile.experience_years,\\n              data_source: item.json.employees ? 'proxycurl' : 'rapidapi',\\n              api_response: profile\\n            },\\n            \\n            // Metadata\\n            search_query: searchParams.keywords,\\n            search_timestamp: new Date().toISOString(),\\n            tags: [searchParams.prospect_type, 'linkedin_alternative', inPremiumArea ? 'premium_area' : 'standard_area']\\n          });\\n        }\\n      } catch (profileError) {\\n        console.error('Error processing LinkedIn profile:', profileError);\\n      }\\n    }\\n  } catch (itemError) {\\n    console.error('Error processing LinkedIn search result:', itemError);\\n  }\\n}\\n\\n// Helper Functions\\nfunction generateLinkedInPersonalizedAngle(profile, searchParams) {\\n  const name = profile.first_name || 'there';\\n  const company = profile.current_company || 'your business';\\n  const title = profile.headline || profile.job_title || 'business professional';\\n  \\n  const angles = {\\n    automotive: `Hi ${name}, I noticed your role as ${title} at ${company}. California's auto market is incredibly competitive - a custom jingle could give you the brand recognition edge that drives more customers to your lot.`,\\n    restaurant: `Hi ${name}, your experience as ${title} at ${company} caught my attention. In California's crowded restaurant scene, a memorable jingle could be what makes customers choose you over the competition.`,\\n    legal: `Dear ${name}, as ${title} at ${company}, you understand the importance of being top-of-mind when people need legal services. A professional jingle ensures your firm is the first one clients remember.`,\\n    medical: `Hi ${name}, your role as ${title} at ${company} shows your commitment to patient care. A soothing, professional jingle can help reduce patient anxiety and build trust in your practice.`,\\n    real_estate: `Hi ${name}, as ${title} at ${company}, you know how crucial it is to be the agent people remember. A custom jingle ensures you're top-of-mind when they're ready to buy or sell.`\\n  };\\n  \\n  return angles[searchParams.prospect_type] || `Hi ${name}, your role as ${title} at ${company} caught my attention. A custom jingle could help your business stand out in California's competitive market.`;\\n}\\n\\nfunction estimateLinkedInBudget(profile, type) {\\n  let budget = 'medium';\\n  \\n  // High-budget business types\\n  if (['automotive', 'legal'].includes(type)) {\\n    budget = 'high';\\n  }\\n  \\n  // Senior position adjustment\\n  const title = (profile.headline || profile.job_title || '').toLowerCase();\\n  if (title.includes('owner') || title.includes('partner') || title.includes('ceo')) {\\n    budget = budget === 'medium' ? 'medium-high' : 'high';\\n  }\\n  \\n  return budget;\\n}\\n\\nfunction assessLinkedInJingleNeeds(type) {\\n  const common = ['brand_recognition', 'professional_image'];\\n  \\n  const specific = {\\n    automotive: [...common, 'tv_commercials', 'radio_ads', 'showroom_music'],\\n    restaurant: [...common, 'radio_ads', 'social_media', 'atmosphere_music'],\\n    legal: [...common, 'tv_ads', 'phone_hold', 'professional_image'],\\n    medical: [...common, 'waiting_room', 'phone_hold', 'patient_comfort'],\\n    real_estate: [...common, 'radio_ads', 'video_marketing', 'social_media']\\n  };\\n  \\n  return specific[type] || common;\\n}\\n\\nfunction identifyLinkedInPainPoints(type) {\\n  const common = ['brand_recognition', 'local_competition', 'lead_generation'];\\n  \\n  const specific = {\\n    automotive: [...common, 'inventory_movement', 'seasonal_sales'],\\n    restaurant: [...common, 'customer_retention', 'social_media_presence'],\\n    legal: [...common, 'client_trust', 'referral_generation'],\\n    medical: [...common, 'patient_comfort', 'appointment_scheduling'],\\n    real_estate: [...common, 'market_volatility', 'client_decision_time']\\n  };\\n  \\n  return specific[type] || common;\\n}\\n\\nfunction extractCity(location) {\\n  if (!location) return 'Los Angeles'; // Default\\n  \\n  const cityMatch = location.match(/([^,]+),?\\\\s*CA/i);\\n  return cityMatch ? cityMatch[1].trim() : location.split(',')[0].trim();\\n}\\n\\n// Sort by score and return top prospects\\nqualifiedProspects.sort((a, b) => b.lead_score - a.lead_score);\\n\\nconsole.log(`Generated ${qualifiedProspects.length} qualified LinkedIn prospects`);\\n\\nreturn qualifiedProspects.slice(0, 15).map(prospect => ({ json: prospect }));\"\n      },\n      \"id\": \"6f7a8b9c-0d1e-2f3a-4b5c-6d7e8f9a0b1c\",\n      \"name\": \"Process LinkedIn Results\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [1120, 300]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"prospects\",\n        \"columns\": \"name,business_name,email,prospect_type,industry_category,lead_source,lead_score,budget_estimate,priority_level,jingle_needs,personalized_angle,pain_points,city,state,in_california,is_premium_area,tags\",\n        \"additionalFields\": {\n          \"mode\": \"upsert\",\n          \"upsertColumns\": \"name,business_name\"\n        }\n      },\n      \"id\": \"7a8b9c0d-1e2f-3a4b-5c6d-7e8f9a0b1c2d\",\n      \"name\": \"Save LinkedIn Prospects\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1340, 300],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"linkedin_data\",\n        \"columns\": \"prospect_id,linkedin_url,first_name,last_name,headline,current_company,current_position,industry,location,connections_count,experience_years,data_source,api_response\",\n        \"additionalFields\": {\n          \"mode\": \"upsert\",\n          \"upsertColumns\": \"linkedin_url\"\n        }\n      },\n      \"id\": \"8b9c0d1e-2f3a-4b5c-6d7e-8f9a0b1c2d3e\",\n      \"name\": \"Save LinkedIn Data\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1340, 480],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// SongLabAI - LinkedIn Alternative Summary\\n// Generate summary statistics for LinkedIn prospecting\\n\\nconst items = $input.all();\\nconst timestamp = new Date();\\n\\n// Count results by type\\nconst summary = {\\n  total_linkedin_prospects: items.length,\\n  automotive_prospects: items.filter(item => item.json.prospect_type === 'automotive').length,\\n  restaurant_prospects: items.filter(item => item.json.prospect_type === 'restaurant').length,\\n  legal_prospects: items.filter(item => item.json.prospect_type === 'legal').length,\\n  medical_prospects: items.filter(item => item.json.prospect_type === 'medical').length,\\n  real_estate_prospects: items.filter(item => item.json.prospect_type === 'real_estate').length,\\n  premium_area_prospects: items.filter(item => item.json.is_premium_area).length,\\n  high_score_prospects: items.filter(item => item.json.lead_score >= 70).length,\\n  prospects_with_email: items.filter(item => item.json.email).length,\\n  average_score: items.length > 0 ? Math.round(items.reduce((sum, item) => sum + item.json.lead_score, 0) / items.length) : 0,\\n  execution_timestamp: timestamp.toISOString(),\\n  workflow_name: 'LinkedIn Alternative Prospecting'\\n};\\n\\n// Log to console for monitoring\\nconsole.log('=== LinkedIn Alternative Prospecting Summary ===');\\nconsole.log(`👔 Total LinkedIn Prospects: ${summary.total_linkedin_prospects}`);\\nconsole.log(`🚗 Automotive: ${summary.automotive_prospects}`);\\nconsole.log(`🍽️ Restaurant: ${summary.restaurant_prospects}`);\\nconsole.log(`⚖️ Legal: ${summary.legal_prospects}`);\\nconsole.log(`🏥 Medical: ${summary.medical_prospects}`);\\nconsole.log(`🏠 Real Estate: ${summary.real_estate_prospects}`);\\nconsole.log(`💎 Premium Area: ${summary.premium_area_prospects}`);\\nconsole.log(`📧 With Email: ${summary.prospects_with_email}`);\\nconsole.log(`🎯 High Score (70+): ${summary.high_score_prospects}`);\\nconsole.log(`📊 Average Score: ${summary.average_score}`);\\nconsole.log('==============================================');\\n\\nreturn [{ json: summary }];\"\n      },\n      \"id\": \"9c0d1e2f-3a4b-5c6d-7e8f-9a0b1c2d3e4f\",\n      \"name\": \"Generate LinkedIn Summary\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [1560, 300]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"workflow_logs\",\n        \"columns\": \"workflow_name,status,start_time,end_time,records_processed,records_success,context_data\"\n      },\n      \"id\": \"0d1e2f3a-4b5c-6d7e-8f9a-0b1c2d3e4f5a\",\n      \"name\": \"Log LinkedIn Workflow\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1780, 300],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    },\n    {\n      \"parameters\": {\n        \"conditions\": {\n          \"options\": {\n            \"caseSensitive\": true,\n            \"leftValue\": \"\",\n            \"typeValidation\": \"strict\"\n          },\n          \"conditions\": [\n            {\n              \"id\": \"condition1\",\n              \"leftValue\": \"={{ $json.total_linkedin_prospects }}\",\n              \"rightValue\": 0,\n              \"operator\": {\n                \"type\": \"number\",\n                \"operation\": \"gt\"\n              }\n            }\n          ],\n          \"combinator\": \"and\"\n        },\n        \"options\": {}\n      },\n      \"id\": \"1e2f3a4b-5c6d-7e8f-9a0b-1c2d3e4f5a6b\",\n      \"name\": \"Check LinkedIn Results\",\n      \"type\": \"n8n-nodes-base.if\",\n      \"typeVersion\": 2,\n      \"position\": [1560, 120]\n    },\n    {\n      \"parameters\": {\n        \"method\": \"POST\",\n        \"url\": \"={{ $env.SLACK_WEBHOOK_URL }}\",\n        \"options\": {\n          \"body\": {\n            \"type\": \"json\",\n            \"json\": \"{\\n  \\\"text\\\": \\\"👔 SongLabAI LinkedIn Prospecting Update\\\",\\n  \\\"blocks\\\": [\\n    {\\n      \\\"type\\\": \\\"section\\\",\\n      \\\"text\\\": {\\n        \\\"type\\\": \\\"mrkdwn\\\",\\n        \\\"text\\\": \\\"*LinkedIn Alternative Prospecting Complete* 👔\\\\n\\\\nFound {{ $json.total_linkedin_prospects }} new decision makers:\\\\n• 🚗 Automotive: {{ $json.automotive_prospects }}\\\\n• 🍽️ Restaurant: {{ $json.restaurant_prospects }}\\\\n• ⚖️ Legal: {{ $json.legal_prospects }}\\\\n• 🏥 Medical: {{ $json.medical_prospects }}\\\\n• 🏠 Real Estate: {{ $json.real_estate_prospects }}\\\\n\\\\n📧 Prospects with Email: {{ $json.prospects_with_email }}\\\\n💎 Premium Area: {{ $json.premium_area_prospects }}\\\\n📊 Average Lead Score: {{ $json.average_score }}\\\\n🎯 High Priority (70+ score): {{ $json.high_score_prospects }}\\\"\n      }\n    }\n  ]\n}\"\n          }\n        }\n      },\n      \"id\": \"2f3a4b5c-6d7e-8f9a-0b1c-2d3e4f5a6b7c\",\n      \"name\": \"Send LinkedIn Notification\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [1780, 120]\n    },\n    {\n      \"parameters\": {\n        \"jsCode\": \"// SongLabAI - LinkedIn Error Handler\\n// Log errors and send notifications for failed LinkedIn workflow\\n\\nconst error = $input.first();\\nconst timestamp = new Date();\\n\\n// Create error summary\\nconst errorSummary = {\\n  workflow_name: 'LinkedIn Alternative Prospecting',\\n  status: 'error',\\n  start_time: timestamp.toISOString(),\\n  end_time: timestamp.toISOString(),\\n  records_processed: 0,\\n  records_success: 0,\\n  error_message: error.error?.message || 'LinkedIn API error occurred',\\n  error_stack: error.error?.stack || 'No stack trace available',\\n  context_data: {\\n    node_name: error.node?.name || 'Unknown node',\\n    error_type: error.error?.name || 'LinkedIn API Error',\\n    execution_id: $executionId,\\n    timestamp: timestamp.toISOString(),\\n    api_used: error.json?.api_used || 'unknown'\\n  }\\n};\\n\\nconsole.error('❌ LinkedIn Alternative Prospecting Failed:', errorSummary);\\n\\nreturn [{ json: errorSummary }];\"\n      },\n      \"id\": \"3a4b5c6d-7e8f-9a0b-1c2d-3e4f5a6b7c8d\",\n      \"name\": \"LinkedIn Error Handler\",\n      \"type\": \"n8n-nodes-base.code\",\n      \"typeVersion\": 2,\n      \"position\": [900, 520]\n    },\n    {\n      \"parameters\": {\n        \"operation\": \"insert\",\n        \"table\": \"workflow_logs\",\n        \"columns\": \"workflow_name,status,start_time,end_time,records_processed,records_success,error_message,error_stack,context_data\"\n      },\n      \"id\": \"4b5c6d7e-8f9a-0b1c-2d3e-4f5a6b7c8d9e\",\n      \"name\": \"Log LinkedIn Error\",\n      \"type\": \"n8n-nodes-base.postgres\",\n      \"typeVersion\": 2.4,\n      \"position\": [1120, 520],\n      \"credentials\": {\n        \"postgres\": {\n          \"id\": \"postgres_main\",\n          \"name\": \"PostgreSQL - SongLabAI\"\n        }\n      }\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"Bi-Daily LinkedIn Trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Setup LinkedIn Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Setup LinkedIn Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check Proxycurl Available\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check Proxycurl Available\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Proxycurl Company Search\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ],\n        [\n          {\n            \"node\": \"RapidAPI LinkedIn Alternative\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Proxycurl Company Search\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process LinkedIn Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"RapidAPI LinkedIn Alternative\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Process LinkedIn Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Process LinkedIn Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Save LinkedIn Prospects\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Save LinkedIn Data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Save LinkedIn Prospects\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Generate LinkedIn Summary\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Generate LinkedIn Summary\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Check LinkedIn Results\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"Log LinkedIn Workflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"Check LinkedIn Results\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Send LinkedIn Notification\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"LinkedIn Error Handler\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"Log LinkedIn Error\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"active\": true,\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"callerPolicy\": \"workflowsFromSameOwner\",\n    \"errorWorkflow\": {\n      \"onError\": \"continueRegularExecution\"\n    }\n  },\n  \"versionId\": \"1\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"id\": \"linkedin-alternative-prospecting\",\n  \"tags\": [\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"linkedin-alternative\",\n      \"name\": \"linkedin-alternative\"\n    },\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"lead-generation\",\n      \"name\": \"lead-generation\"\n    },\n    {\n      \"createdAt\": \"2025-07-28T23:55:00.000Z\",\n      \"updatedAt\": \"2025-07-28T23:55:00.000Z\",\n      \"id\": \"california\",\n      \"name\": \"california\"\n    }\n  ]\n}"